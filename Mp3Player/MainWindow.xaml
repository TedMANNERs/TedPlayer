<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:namespace="clr-namespace:Mp3Player"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" x:Class="Mp3Player.MainWindow"
        Title="Ted Player" Height="350" Width="525" Background="White" MouseLeftButtonDown="Window_MouseLeftButtonDown" 
        AllowsTransparency="True" WindowStyle="None" Style="{DynamicResource WindowStyle}">
    <Window.DataContext>
        <namespace:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <namespace:PathToFileNameConverter x:Key="PathConverter"/>
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome GlassFrameThickness="-1" ResizeBorderThickness="5" CaptionHeight="30"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type namespace:MainWindow}">
                        <Grid>
                            <Border Margin="1,0,1,0" BorderThickness="0,1,0,1" BorderBrush="LightGray">
                                <Rectangle Fill="{TemplateBinding Background}"/>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                            <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}" 
                                   Width="16" Height="16" WindowChrome.IsHitTestVisibleInChrome="True"/>
                            <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,5,0">
                                <Button Name="CloseButton" Style="{DynamicResource ButtonStyle}" Content="✕" HorizontalAlignment="Right"
                                        Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Click="CloseButton_Click"/>
                                <Button Name="WindowStateButton" Style="{DynamicResource ButtonStyle}" Content="□" HorizontalAlignment="Right"
                                        Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Click="WindowStateButton_Click"/>
                                <Button Name="MinimizeButton" Style="{DynamicResource ButtonStyle}" Content="_" HorizontalAlignment="Right"
                                        Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Click="MinimizeButton_Click"/>
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="180"/>
            <ColumnDefinition MinWidth="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="2" HorizontalAlignment="Right" Content="{Binding Path=MediaPosition}"/>
        <MediaElement Grid.Row="0" Grid.Column="0" Name="MediaPlayer" LoadedBehavior="Manual" Source="{Binding Path=CurrentTrack}" 
                      Volume="{Binding Path=Volume}" MediaOpened="MediaPlayer_MediaOpened"/>
        <ListBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=TrackList}" Margin="0,0,0,5" SelectedItem="{Binding Path=CurrentTrack}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Label Content="{Binding LocalPath, Converter={StaticResource PathConverter}}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Slider Name="TrackSlider" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Margin="10,0,10,0" IsMoveToPointEnabled="True"
                Value="{Binding Path=MediaPosition}" Maximum="{Binding Path=MediaLength}" Thumb.DragCompleted="TrackSlider_OnDragCompleted" />
        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
            <Button Margin="5,5,5,5" Content="❙◀" Padding="5,5" Command="{Binding PreviousCommand}" 
				    FontFamily="Segoe UI Symbol" MinWidth="25" Style="{StaticResource ButtonStyle}"/>
            <Button Margin="5,5,5,5" Padding="5,5" Command="{Binding PlayPauseCommand}" 
				    FontFamily="Segoe UI Symbol" MinWidth="30">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
                        <Setter Property="Content" Value="▶"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                                <Setter Property="Content" Value="❚❚"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlaying}" Value="false">
                                <Setter Property="Content" Value="▶"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Orientation="Horizontal">
            <Label FontFamily="Segoe UI Symbol" MinWidth="22">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Content" Value="&#128266;"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Volume}" Value="0" >
                                <Setter Property="Content" Value="&#x1f508;"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Volume}" Value="0.25">
                                <Setter Property="Content" Value="&#128264;"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Volume}" Value="0.5">
                                <Setter Property="Content" Value="&#128265;"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Volume}" Value="0.75">
                                <Setter Property="Content" Value="&#128266;"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Slider Width="100" Value="{Binding Path=Volume}" Maximum="1" SmallChange="0.05"/>
            <Button Margin="5,5,5,5" Content="▶❙" Padding="5,5" Command="{Binding NextCommand}" 
				    FontFamily="Segoe UI Symbol" MinWidth="25" Style="{StaticResource ButtonStyle}"/>
            <Button Margin="5,5,5,5" Content="■" Padding="5,5" Command="{Binding StopCommand}" 
				    FontFamily="Segoe UI Symbol" MinWidth="30" Style="{StaticResource ButtonStyle}"/>
        </StackPanel>
        <Grid Grid.Column="1" Grid.Row="3">
            <Button Margin="5,5,5,5" HorizontalAlignment="Right" Style="{StaticResource ButtonStyle}"
			        Content="Open" Padding="5,5" Command="{Binding OpenCommand}" BorderThickness="1" BorderBrush="LightGray" Width="50"/>
        </Grid>
    </Grid>
</Window>
